/*
Detect a cycle in a linked list. Note that the head pointer may be 'null' if the list is empty.

A Node is defined as: 
    class Node {
        int data;
        Node next;
    }
*/

boolean hasCycle(Node head) {
    if(head == null){
        return false;
    }
    Node currentNode = head;
    ArrayList<Node> nodeList = new ArrayList<Node>();
    nodeList.add(currentNode);
    currentNode = currentNode.next;
    while(currentNode != null) {
        if (nodeList.contains(currentNode)) {
            return true;
        }
        nodeList.add(currentNode);
        currentNode = currentNode.next;
    }
    return false;
}


